import{_ as a,o as e,c as t,N as o}from"./chunks/framework.c42f8d73.js";const r="/assets/img_15.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/browser/q3.md"}'),n={name:"web/browser/q3.md"},s=o('<h2 id="渲染流程" tabindex="-1">渲染流程 <a class="header-anchor" href="#渲染流程" aria-label="Permalink to &quot;渲染流程&quot;">​</a></h2><blockquote><p>导航被提交后,就进入了渲染阶段。渲染模流程在执行过程中会被划分为很多子阶段， 输入的 HTML 经过这些子阶段，最后输出像素。我们把这样的一个处理流程叫做<strong>渲染流水线</strong></p></blockquote><p>其大致流程如下图所示：</p><p><img src="'+r+'" alt=""></p><blockquote><p>按照渲染的时间顺序，流水线可分为如下几个子阶段：<strong>构建 DOM 树</strong>、<strong>样式计算</strong>、 <strong>布局阶段</strong>、<strong>分层</strong>、<strong>绘制</strong>、<strong>分块</strong>、<strong>光栅化</strong>和<strong>合成</strong>。</p></blockquote><h2 id="构建-dom-树" tabindex="-1">构建 DOM 树 <a class="header-anchor" href="#构建-dom-树" aria-label="Permalink to &quot;构建 DOM 树&quot;">​</a></h2><h2 id="样式计算" tabindex="-1">样式计算 <a class="header-anchor" href="#样式计算" aria-label="Permalink to &quot;样式计算&quot;">​</a></h2><h2 id="布局阶段" tabindex="-1">布局阶段 <a class="header-anchor" href="#布局阶段" aria-label="Permalink to &quot;布局阶段&quot;">​</a></h2><h2 id="分层" tabindex="-1">分层 <a class="header-anchor" href="#分层" aria-label="Permalink to &quot;分层&quot;">​</a></h2><h2 id="绘制" tabindex="-1">绘制 <a class="header-anchor" href="#绘制" aria-label="Permalink to &quot;绘制&quot;">​</a></h2><h2 id="分块" tabindex="-1">分块 <a class="header-anchor" href="#分块" aria-label="Permalink to &quot;分块&quot;">​</a></h2><h2 id="光栅化" tabindex="-1">光栅化 <a class="header-anchor" href="#光栅化" aria-label="Permalink to &quot;光栅化&quot;">​</a></h2><h2 id="合成" tabindex="-1">合成 <a class="header-anchor" href="#合成" aria-label="Permalink to &quot;合成&quot;">​</a></h2>',13),i=[s];function h(l,c,d,_,u,b){return e(),t("div",null,i)}const m=a(n,[["render",h]]);export{g as __pageData,m as default};
